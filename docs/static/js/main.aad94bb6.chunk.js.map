{"version":3,"sources":["types/types.js","reducers/CounterReducer.js","redux/storeRedux.js","components/counterView.js","actions/counterActions.js","pages/App.js","index.js"],"names":["types","CounterReducer","state","counter","action","type","payload","amount","reducers","combineReducers","store","createStore","CounterView","useSelector","dispatch","useDispatch","className","onClick","prototype","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAAaA,EACC,aADDA,EAEC,YCeCC,EAfQ,WAAiC,IAAhCC,EAA+B,uDAAvB,CAACC,QAAQ,GAAGC,EAAW,uCAEnD,OAAQA,EAAOC,MACX,KAAKL,EACD,MAAO,CAACG,QAASD,EAAMC,QAAQC,EAAOE,QAAQC,QAElD,KAAKP,EACD,MAAO,CAACG,QAASD,EAAMC,QAAQC,EAAOE,QAAQC,QAElD,QACI,OAAOL,ICTbM,EAAWC,YAAgB,CAC7BN,QAAQF,IAGCS,EAAQC,YAAYH,G,OCH3BI,EAAc,WAAK,IAELT,EAAaU,aAAY,SAACH,GAAD,OAASA,KAA3CP,QAASA,QACVW,EAAWC,cAWjB,OACI,qCACI,yCACA,sBAAKC,UAAU,UAAf,UACI,wBAAQC,QATM,WACtBH,ECJoC,CACpCT,KAAML,EACNM,QAAQ,CACJC,ODCsB,OAQlB,2BACA,4BAAIJ,IACJ,wBAAQc,QAfM,WACtBH,ECRmC,CACnCT,KAAML,EACNM,QAAQ,CACJC,ODKsB,OAclB,kCAMhBK,EAAYM,UAAY,GAKTN,QErBAO,MARf,WACE,OACE,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACI,cAAC,EAAD,OCJRU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.aad94bb6.chunk.js","sourcesContent":["export const types = {\n    increment:'incremenet',\n    decrement:'decrement',\n}","import { types } from '../types/types';\n\nconst CounterReducer = (state = {counter:0},action) => {\n\n    switch (action.type) {\n        case types.increment: \n            return {counter: state.counter+action.payload.amount};\n\n        case types.decrement:            \n            return {counter: state.counter-action.payload.amount}; \n                     \n        default:\n            return state;\n    }\n}\n\n\nexport default CounterReducer;","import {createStore, combineReducers} from 'redux';\nimport CounterReducer from '../reducers/CounterReducer';\n\nconst reducers = combineReducers({\n    counter:CounterReducer, \n});  \n\nexport const store = createStore(reducers);\n\n","import {useDispatch, useSelector} from 'react-redux';\nimport {incrementCounter,decrementCounter} from '../actions/counterActions';\n\n\nconst CounterView = ()=>{\n\n    const {counter:{counter}} =  useSelector((store)=>store);\n    const dispatch = useDispatch();\n\n    const handleToIncrement = ()=>{\n        dispatch(incrementCounter(10)); \n    }\n\n    const handleToDecrement = ()=>{\n        dispatch(decrementCounter(10))\n    }\n\n\n    return(\n        <>\n            <h1>COUNTER</h1>\n            <div className=\"counter\">\n                <button onClick={handleToDecrement}>Decrement -10</button>\n                <p>{counter}</p>\n                <button onClick={handleToIncrement}>Increment +10</button>\n            </div>\n        </>\n    )\n};\n\nCounterView.prototype = {\n\n}\n\n\nexport default CounterView;","import { types } from '../types/types'\n\nexport const incrementCounter = (amount)=>({\n        type: types.increment,\n        payload:{\n            amount: amount\n        }\n})\n\n\nexport const decrementCounter = (amount)=> ({\n        type: types.decrement,\n        payload:{\n            amount: amount\n        }\n})\n","import {Provider} from 'react-redux';\n\nimport '../styles/App.css';\nimport { store } from '../redux/storeRedux';\nimport CounterView from '../components/counterView';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n        <CounterView />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './pages/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}